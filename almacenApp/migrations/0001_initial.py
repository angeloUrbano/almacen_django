# Generated by Django 4.0.1 on 2022-05-09 11:44

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Condicion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_condicion', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Lote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_lote', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Misil',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_misil', models.IntegerField(unique=True)),
                ('version', models.CharField(error_messages={'unique': 'Prueba de error.'}, max_length=100)),
                ('fecha_creacion', models.DateTimeField()),
                ('peso', models.CharField(max_length=100)),
                ('velocidad', models.CharField(max_length=100)),
                ('diametro_cuerpo', models.CharField(max_length=100)),
                ('largo', models.CharField(max_length=100)),
                ('alcance_max', models.CharField(max_length=100)),
                ('masa_combustible', models.CharField(max_length=100)),
                ('masa_sustancia_explosiva', models.CharField(max_length=100)),
                ('fecha_creacionde_registro', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='DetallesExtras',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial', models.IntegerField(unique=True)),
                ('numero_fabricacion', models.IntegerField()),
                ('fecha_vencimiento', models.DateTimeField()),
                ('fecha_ultimo_mantenimiento', models.DateTimeField()),
                ('fecha_ultima_comprobacion', models.DateTimeField()),
                ('descripcion', models.TextField(max_length=250)),
                ('imagen1', models.ImageField(upload_to='imagenes/')),
                ('imagen2', models.ImageField(upload_to='imagenes/')),
                ('imagen3', models.ImageField(upload_to='imagenes/')),
                ('condicion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='almacenApp.condicion')),
                ('lote_relacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='almacenApp.lote')),
                ('relacion', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='almacenApp.misil')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('cedula', models.CharField(max_length=100)),
                ('Telefono', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator(message='formato permitido +999999999', regex='\\+?1?\\d{9,15}$')])),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
